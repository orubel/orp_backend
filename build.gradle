// stormpath tenant: lovely-weaver
buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        flatDir {
            dirs 'lib'
        }

        mavenLocal()
        mavenCentral()
        maven { url "https://repo.grails.org/grails/core" }
        //maven { url "${System.getProperty('user.home')}/.m2/repository" }
    }
    dependencies {
        //classpath group: 'org.codehaus.gpars', name: 'gpars', version: '1.2.1'
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'org.grails.plugins:api-framework:0.9'
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.1.1'
    }
}

plugins {
    //id "io.spring.dependency-management" version "0.4.0.RELEASE"
    id "io.spring.dependency-management" version "0.6.0.RELEASE"
}

version "0.1"
group "@grails.app.group@"

apply plugin: "spring-boot"
apply plugin: "org.grails.grails-web"
//apply plugin: "org.grails.grails-gsp"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    //maven { url 'https://dl.bintray.com/nosegrind/plugins' }
    maven { url "https://repo.grails.org/grails/core" }
    //maven { url "${System.getProperty('user.home')}/.m2/repository/" }
    //maven { url "http://maven.it.su.se/it.su.se/maven2/" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

bootRun {
    systemProperties = System.properties
}

test {
    systemProperties = System.properties
}

dependencies {
    compile 'org.grails.plugins:api-framework:0.9'
    //compile group: 'org.scribe', name: 'scribe', version: '1.3.7'
    //compile(name:'api-framework', version:'0.2.1.2')
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile('org.grails:grails-dependencies'){
        //exclude(module:'grails-plugin-rest')
        exclude(module:'grails-bootstrap')
        exclude(module:'grails-plugin-gsp')
    }

    compile('org.grails:grails-web') {
        exclude(module: 'org.grails:grails-web-jsp')
        exclude(module: 'org.grails:grails-web-sitemesh')
        exclude(module:'org.grails:grails-web-gsp')
    }

    provided 'org.grails.plugins:hibernate:4.3.10.6'
    provided "org.hibernate:hibernate-ehcache"
    runtime 'mysql:mysql-connector-java:5.1.29'

    testCompile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1') {
        exclude module: "commons-logging"
        exclude module: "xml-apis"
        exclude module: "groovy"
    }

    provided 'org.springframework.boot:spring-boot-starter-tomcat'

    provided('org.grails.plugins:spring-security-core:3.1.1')

    //provided('org.grails.plugins:spring-security-rest:2.0.0.M2')

    compile('org.grails.plugins:spring-security-rest-gorm:2.0.0.M2'){
        exclude module: 'org.grails.plugins:spring-security-rest:2.0.0.M2'
    }

    //compile 'org.grails.plugins:db-reverse-engineer:4.0.0'

    // quartz scheduler
    //compile 'org.grails.plugins:quartz:2.0.9'

    //runtime "org.grails.plugins:scaffolding"

    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-plugin-testing"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    //testCompile "org.grails:grails-datastore-rest-client:4.0.4.RELEASE"
    console "org.grails:grails-console"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}




